version: '3'

dotenv: ["dev.env"]

vars:
  PROJECT_NAME: da-ai-agent
  PYTHON_VERSION: 3.11.4
  VENV: da-ai-agent
  PYTHON: python3
  ENV: local

tasks:
  venv-create:
    status:
      - "test -f {{.VENV}}/bin/activate"
    cmds:
      - "python3 -m venv {{.VENV}}"
      - ". {{.VENV}}/bin/activate"
      - "python3 -m pip install --upgrade pip"
      - "pip install poetry"
      - "poetry install"
    preconditions:
      - sh: "which poetry"
        msg: "No Poetry found"
      - sh: "which {{.PYTHON}}"
        msg: "No {{.PYTHON}} found"

  venv-activate:
    deps:
      - venv-create
    cmds:
      - ". {{.VENV}}/bin/activate"

  pyenv-create:
    cmds:
      - "pyenv virtualenv {{.PYTHON_VERSION}} {{.VENV}}"

  pyenv-setup:
    cmds:
      - "python3 -m pip install --upgrade pip"
      - "pip install poetry"
    # - "poetry install"

  pyenv-activate:
    cmds:
      - "pyenv activate {{.VENV}}"

  pyenv-remove:
    cmds:
      - "pyenv virtualenv-delete {{.VENV}}"

  isort-format:
    cmds:
      - "poetry run isort ."

  isort-check:
    cmds:
      - "poetry run isort --check --diff ."

  black-format:
    cmds:
      - "poetry run black ."

  black-check:
    cmds:
      - "poetry run black --check ."

  mypy:
    cmds:
      - "poetry run mypy ."

  pylint:
    cmds:
      - "poetry run pylint app"

  pytest:
    desc: "run pytest locally (pass args after '--')"
    deps:
      - docker-db-up
    cmds:
      - alembic downgrade base
      - alembic upgrade head
      - poetry run pytest -s -vv -x tests/ --cov=app {{.CLI_ARGS}}

  run:
    desc: "Run app locally"
    cmds:
      - uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  start-presto:
    desc: Run the project with PrestoDB
    cmds:
      - poetry run start_presto --prompt "{{.PROMPT}}"

  start-postgres:
    desc: Run the project with PostgreSQL
    cmds:
      - poetry run start_postgres --prompt "{{.PROMPT}}"

  test:
    desc: "Run the tests"
    cmds:
      - poetry run pytest

  format:
    desc: "Run code formatters"
    cmds:
      - task: isort-format
      - task: black-format

  lint:
    desc: "Run linters"
    cmds:
      - task: isort-check
      - task: black-check
      - task: pylint
      - task: mypy

  clean:
    desc: "Clean up generated files"
    cmds:
      - rm -rf ./agent_results